from telebot import types

import telebot
token='7492612967:AAExbOQ1Dz_vLT_UBCMx_T5sogAGlPdbU5s'
TO_CHAT_ID =7764132164

bot = telebot.TeleBot(token)

requests_queue = []


@bot.message_handler(commands=['start'])
def welcome(message):
    markup=types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
    button1=types.KeyboardButton('–¢–∞—Ä–∏—Ñ—ã $')
    
    markup.add(button1)
    bot.send_message(message.chat.id,
                     "–û–∑–Ω–∞–∫–æ–º—å—Å—è —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏,\n—ç—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µüëá ".format(message.from_user, bot.get_me()),parse_mode='html',reply_markup=markup)
@bot.message_handler(content_types=['text','photo'])
def message_reply(message):    
    markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
    week=types.KeyboardButton('–ù–µ–¥–µ–ª—è')
    month=types.KeyboardButton('–ú–µ—Å—è—Ü')
    always=types.KeyboardButton('–ù–∞–≤—Å–µ–≥–¥–∞')
    pay=types.KeyboardButton('–Ø –æ–ø–ª–∞—Ç–∏–ª')
    
    user_id=message.from_user.id
    
    
    markup.add(week,month,always)
    if message.text=='–¢–∞—Ä–∏—Ñ—ã $':
        
        
        bot.send_message(message.chat.id,'–ß—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–∞—Ä–∏—Ñ–æ–º, –≤—ã–±–µ—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π, –Ω–∞–∂–∞–≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É',reply_markup=markup)
        
    markup=types.ReplyKeyboardMarkup(resize_keyboard=True)
    delete.markup()
    markup.add(pay)
    
    

    if message.text=='–ù–µ–¥–µ–ª—è':
                
                     
            bot.send_message(user_id,"–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:\n–ü–æ –Ω–æ–º–µ—Ä—É +7 (915) 785 16 13 –§–µ–¥–æ—Ä –ì. \n–¢-–ë–∞–Ω–∫(–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!)\n  \n–ö –æ–ø–ª–∞—Ç–µ: 160.00 üá∑üá∫RUB",reply_markup=markup)
                
    if message.text=='–ú–µ—Å—è—Ü':
                
            bot.send_message(message.chat.id,"–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:\n–ü–æ –Ω–æ–º–µ—Ä—É +7 (915) 785 16 13 –§–µ–¥–æ—Ä –ì. \n–¢-–ë–∞–Ω–∫(–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!)\n  \n–ö –æ–ø–ª–∞—Ç–µ: 380.00 üá∑üá∫RUB",reply_markup=markup)
    if message.text=='–ù–∞–≤—Å–µ–≥–¥–∞':
                
            bot.send_message(message.chat.id,"–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:\n–ü–æ –Ω–æ–º–µ—Ä—É +7 (915) 785 16 13 –§–µ–¥–æ—Ä –ì. \n–¢-–ë–∞–Ω–∫(–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!)\n  \n–ö –æ–ø–ª–∞—Ç–µ: 960.00 üá∑üá∫RUB",reply_markup=markup)
        
    if message.text=='–Ø –æ–ø–ª–∞—Ç–∏–ª':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id,"–û—Ç–ø—Ä–∞–≤—å —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–± –æ–ø–ª–∞—Ç–µ ",reply_markup=markup)
        bot.register_next_step_handler(message, help_bot)
    
        


# –§—É–Ω–∫—Ü–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—è –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏
def help_bot(message):
    requests_queue.append((message.message_id, message.chat.id))
    bot.forward_message(TO_CHAT_ID, message.chat.id, message.message_id)
    markup_inline = types.InlineKeyboardMarkup([[
        types.InlineKeyboardButton(text='–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f'answer{message.chat.id}')
    ]])
    bot.send_message(TO_CHAT_ID, f"–î–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup_inline)
    


@bot.message_handler(commands=["requests"], func=lambda m: int(m.chat.id) == int(TO_CHAT_ID))
def all_messages(message):
    bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã:")
    for i, req in enumerate(requests_queue):
        bot.forward_message(TO_CHAT_ID, req[1], req[0])
        markup_inline = types.InlineKeyboardMarkup([[
            types.InlineKeyboardButton(text='–û—Ç–≤–µ—Ç–∏—Ç—å', callback_data=f'answer{req[1]}')
        ]])
        bot.send_message(message.chat.id, f"–î–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup_inline)


def send_answer(message: types.Message, call, chat_id):
    markup_inline = types.InlineKeyboardMarkup()
    btn_my_site = types.InlineKeyboardButton(text='–ü—Ä–∏–≤–∞—Ç', url='https://t.me/+HJFaNfQ3QLowZGE6')
    markup_inline.add(btn_my_site)
    if message.text == 'yes':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(call.message.chat.id, "–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!",reply_markup=markup)
        bot.send_message(chat_id, "–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ",reply_markup=markup_inline)
        for i, req in enumerate(requests_queue):
            if int(req[1]) == int(chat_id):
                del requests_queue[i]
    elif message.text == 'no':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(call.message.chat.id, "–û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!",reply_markup=markup)
        bot.send_message(chat_id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ :(")
        


@bot.callback_query_handler(func=lambda call: True)
def answer_callback(call: types.CallbackQuery):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    yes = types.KeyboardButton(text='yes')
    no = types.KeyboardButton(text='no')
    markup.add(yes,no)
    if call.data.startswith("answer"):
        
        
        chat_id = int(call.data[6:])

        bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å",reply_markup=markup)
        bot.register_next_step_handler(call.message, lambda msg: send_answer(msg, call, chat_id))


bot.polling(none_stop=True)
